---------------------------------------------------------------
create turtlebot_le2i/launch/includes robot.launch.xml
---------------------------------------------------------------
<launch>
	<arg name="base"/>
	<arg name="stacks"/>
	<arg name="rplidar_sensor"/>
	
	<include file="$(find turtlebot_le2i)/launch/includes/description.launch.xml">
		<arg name="base" value="$(arg base)" />
		<arg name="stacks" value="$(arg stacks)" />
		<arg name="rplidar_sensor" value="$(arg rplidar_sensor)"/>
	</include>
</launch>

---------------------------------------------------------------
create turtlebot_le2i/launch/includes description.launch.xml
---------------------------------------------------------------
<launch>
	<arg name="base"/>
	<arg name="stacks"/>
	<arg name="rplidar_sensor"/>
	
	<arg name="urdf_file" default="$(find xacro)/xacro.py '$(find turtlebot_le2i)/robots/$(arg base)_$(arg stacks)_$(arg rplidar_sensor).urdf.xacro'" />
	
	<param name="robot_description" command="$(arg urdf_file)" />
</launch>

---------------------------------------------------------------
create turtlebot_le2i/launch rplidar_minimal.launch 
---------------------------------------------------------------
<launch>
	<!-- Launch minimal.launch -->
	<include file="$(find turtlebot_bringup)/launch/minimal.launch"/>
	
	<!-- Create environment variable for rplidar with "rplidar" default value -->
	<arg name="base" default="$(optenv TURTLEBOT_BASE kobuki)"/>
	<arg name="stacks" default="$(optenv TURTLEBOT_STACKS hexagons)"/>
	<arg name="rplidar_sensor" default="$(optenv TURTLEBOT_LASER_SENSOR rplidar)"/>
	
	<!-- Set environment variable for rplidar -->
	<include file="$(find turtlebot_le2i)/launch/includes/robot.launch.xml">
		<arg name="base" value="$(arg base)" />
		<arg name="stacks" value="$(arg stacks)" />
		<arg name="rplidar_sensor" value="$(arg rplidar_sensor)"/>
	</include>
	
	<!-- Launch rplidar -->
	<include file="$(find rplidar_ros)/launch/rplidar.launch"/>
	
</launch>

---------------------------------------------------------------
create turtlebot_le2i/urdf rplidar.urdf.xacro
---------------------------------------------------------------
<?xml version="1.0"?>
<robot name="sensor_rplidar" xmlns:xacro="http://ros.org/wiki/xacro">
	<xacro:include filename="$(find turtlebot_description)/urdf/turtlebot_gazebo.urdf.xacro"/>
	<xacro:include filename="$(find turtlebot_description)/urdf/turtlebot_properties.urdf.xacro"/>
	
	<xacro:macro name="sensor_rplidar" params="parent">
  	<joint name="laser" type="fixed">
		<origin xyz="0.180 0.00 0.040" rpy="0 3.14159265 0" />
		<parent link="${parent}" />
		<child link="base_laser_link" />
	</joint>

	<link name="base_laser_link">
		<visual>
			<geometry>
				<box size="0.00 0.05 0.06" />
			</geometry>
			<material name="Green" />
		</visual>
		<inertial>
			<mass value="0.000001" />
			<origin xyz="0 0 0" />
			<inertia ixx="0.0001" ixy="0.0" ixz="0.0"
			iyy="0.0001" iyz="0.0" izz="0.0001" />
		</inertial>
	</link>
	</xacro:macro>
</robot>

---------------------------------------------------------------
create turtlebot_le2i/robots kobuki_hexagons_rplidar.urdf.xacro
---------------------------------------------------------------
<?xml version="1.0"?>
<!--
    - Base      : kobuki
    - Stacks    : hexagons
    - 3d Sensor : rplidar
-->    
<robot name="turtlebot" xmlns:xacro="http://ros.org/wiki/xacro">

	<xacro:include filename="$(find turtlebot_description)/urdf/turtlebot_library.urdf.xacro" />
	<xacro:include filename="$(find turtlebot_le2i)/urdf/rplidar.urdf.xacro"/>
	
	<kobuki/>
	<stack_hexagons parent="base_link"/>
	<sensor_kinect parent="base_link"/>
	<sensor_rplidar parent="plate_top_link"/>
</robot>

---------------------------------------------------------------
modify rplidar_ros/launch/rplidar.launch
---------------------------------------------------------------
/dev/ttyUSB1
frame_id=base_laser_link

<launch>
  <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
  <param name="serial_port"         type="string" value="/dev/ttyUSB1"/>  
  <param name="serial_baudrate"     type="int"    value="115200"/>
  <param name="frame_id"            type="string" value="base_laser_link"/>
  <param name="inverted"            type="bool"   value="false"/>
  <param name="angle_compensate"    type="bool"   value="true"/>
  </node>
</launch>

---------------------------------------------------------------
modify rplidar_ros/rviz/rplidar.rviz
---------------------------------------------------------------
modify Fixed Frame: /base_laser_link (and not laser)

Global Options:
    Background Color: 48; 48; 48
    Fixed Frame: /base_laser_link
    Frame Rate: 30

